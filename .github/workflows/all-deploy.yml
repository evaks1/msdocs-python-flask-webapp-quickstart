# .github/workflows/azure-deploy.yml

name: Azure Bicep Deployment

on:
  push:
    branches:
      - main

env:
  RESOURCE_GROUP_DEV: BCSAI2024-DEVOPS-STUDENTS-A-DEV
  SUBSCRIPTION_ID_DEV: e0b9cada-61bc-4b5a-bd7a-52c606726b3b
  USER_ALIAS: Els

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Bicep build
        run: az bicep build --file ./main.bicep

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'

    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy Infrastructure
        run: |
          az deployment group create \
            --resource-group ${{ env.RESOURCE_GROUP_DEV }} \
            --template-file ./main.bicep \
            --parameters @./main.parameters.json

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: deploy-dev

    env:
      REGISTRY_LOGIN_SERVER: elsacr.azurecr.io       # Replace with your actual ACR login server
      IMAGE_BASE_NAME: elsimage                     # As per main.bicep
      WEBAPP_NAME: ELSexerciseWEBAPP                # As per main.bicep
      KEY_VAULT_NAME: ElsKeyVault                   # Name of your Key Vault
      KEY_VAULT_SECRET_NAME_ACR_USERNAME: ACR-Username
      KEY_VAULT_SECRET_NAME_ACR_PASSWORD: ACR-Password1

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS}}

      - name: Set Variables from Key Vault
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "REGISTRY_USERNAME=$(az keyvault secret show --name ${{ env.KEY_VAULT_SECRET_NAME_ACR_USERNAME }} --vault-name ${{ env.KEY_VAULT_NAME }} --query value -o tsv)" >> $GITHUB_ENV
            echo "REGISTRY_PASSWORD=$(az keyvault secret show --name ${{ env.KEY_VAULT_SECRET_NAME_ACR_PASSWORD }} --vault-name ${{ env.KEY_VAULT_NAME }} --query value -o tsv)" >> $GITHUB_ENV

      - name: Azure Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set image version
        id: image-version
        run: echo "::set-output name=version::$(echo ${GITHUB_REF#refs/heads/})-$(date +'%Y.%m.%d.%H.%M')"

      - name: Build and push Docker image
        run: |
          docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
          docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ github.ref_name }}-latest
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ github.ref_name }}-latest

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          images: ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}