# .github/workflows/azure-deploy.yml

name: Azure Bicep Deployment

on:
  push:
    branches:
      - main

env:
  RESOURCE_GROUP_DEV: BCSAI2024-DEVOPS-STUDENTS-A-DEV
  SUBSCRIPTION_ID_DEV: e0b9cada-61bc-4b5a-52c606726b3b
  USER_ALIAS: Els
  LOCATION: North Europe
  ACR_NAME: ELSACRexercise                       # Name of your Azure Container Registry
  REGISTRY_LOGIN_SERVER: elsacr.azurecr.io       # ACR login server (e.g., yourregistry.azurecr.io)
  IMAGE_BASE_NAME: elsimage                      # As per main.bicep
  WEBAPP_NAME: ELSexerciseWEBAPP                 # As per main.bicep
  KEY_VAULT_NAME: elskeyvault2025                # Name of your Key Vault
  ACR_USERNAME_SECRET: adminUsernameSecretName
  ACR_PASSWORD_SECRET: adminPasswordSecretName

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image-version: ${{ steps.image-version.outputs.version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@main

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Get ACR credentials from Azure Key Vault'
      uses: azure/CLI@v1
      with:
        inlineScript: |
          ACR_USERNAME=$(az keyvault secret show --name ${{ env.ACR_USERNAME_SECRET }} --vault-name ${{ env.KEY_VAULT_NAME }} --query value -o tsv)
          ACR_PASSWORD=$(az keyvault secret show --name ${{ env.ACR_PASSWORD_SECRET }} --vault-name ${{ env.KEY_VAULT_NAME }} --query value -o tsv)
          echo "REGISTRY_USERNAME=$ACR_USERNAME" >> $GITHUB_ENV
          echo "REGISTRY_PASSWORD=$ACR_PASSWORD" >> $GITHUB_ENV

    - name: Debug ACR credentials
      run: |
        echo "ACR Username: $REGISTRY_USERNAME"
        echo "ACR Password Length: ${#REGISTRY_PASSWORD}"

    - name: Login to ACR
      run: |
        echo "$REGISTRY_PASSWORD" | docker login $REGISTRY_LOGIN_SERVER -u $REGISTRY_USERNAME --password-stdin

    - name: Set image version
      id: image-version
      run: echo "version=${GITHUB_REF#refs/heads/}-$(date +'%Y.%m.%d.%H.%M')" >> $GITHUB_OUTPUT

    - name: Build and Push Docker Image
      run: |
        docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_BASE_NAME}}:${{ steps.image-version.outputs.version }}
        docker tag ${{ env.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_BASE_NAME}}:${{ steps.image-version.outputs.version }} ${{ env.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_BASE_NAME}}:latest
        docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_BASE_NAME}}:${{ steps.image-version.outputs.version }}
        docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_BASE_NAME}}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Docker Image to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.WEBAPP_NAME }}
        images: |
          ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ needs.build-and-push.outputs.image-version }}